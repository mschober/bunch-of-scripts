#!/bin/bash
##
#-----[host]$./run my-example-hive-script.hql
##
#The hive line redirects STDOUT to an outfile 
#and STERR to an outfile while still printing everything to the console
#this is handy for grepping the files later
set -o errexit
set -o nounset
set -o pipefail

source $FUNCTIONS/allow-ssh.func
source $FUNCTIONS/current-server.func

SCRIPT=$1
SCRIPT_TEMPLATE=$HOME/.script-template.hql
LOG_DIR=$PWD/logs
OUTPUT_DIR=$PWD/out


#TODO: parameterize these functions
function create_log_dir {
    if [[ ! -d $LOG_DIR ]]; then
        echo "need to create log dir: $LOG_DIR" 
        echo -n "Would you like to create it? [Y/n]"
        read CREATE_IT
        CREATE_IT=${CREATE_IT:='Y'}

        if [[ $CREATE_IT == 'Y' || $CREATE_IT == 'y' ]]; then
            echo "creating dir $LOG_DIR"
            mkdir $LOG_DIR
        else
            exit 1
        fi
    fi
}

#TODO: parameterize these functions
function create_out_dir {
    if [[ ! -d $OUTPUT_DIR ]]; then
        echo "need to create out dir: $OUTPUT_DIR" 
        echo -n "Would you like to create it? [Y/n]"
        read CREATE_IT
        CREATE_IT=${CREATE_IT:='Y'}

        if [[ $CREATE_IT == 'Y' || $CREATE_IT == 'y' ]]; then
            echo "creating dir $OUTPUT_DIR"
            mkdir $OUTPUT_DIR
        else
            exit 1
        fi
    fi
}

create_log_dir
create_out_dir

SERVER=$(current-server)

allow-ssh

if [[ -s $SCRIPT ]]; then
    if [[ -s $SCRIPT_TEMPLATE ]]; then
        echo "Copying script template to remote server: $SERVER"
        scp $SCRIPT_TEMPLATE $SERVER:

        echo "Copying script to remote server: $SERVER:$PWD"
        rrc $SCRIPT 

        echo "adding script header from $SCRIPT_TEMPLATE"
        rr "cat $SCRIPT_TEMPLATE > H-$SCRIPT"
        rr "cat $SCRIPT >> H-$SCRIPT"
        SCRIPT=H-$SCRIPT
    else
        echo "no script template: $SCRIPT_TEMPLATE"
    fi
    echo "executing $SCRIPT"
    rr "hive -f $SCRIPT" > >(tee $OUTPUT_DIR/$SCRIPT.out) 2> >(tee $LOG_DIR/$SCRIPT.log >&2)
else
    echo "no such script: $SCRIPT"
fi
